{"version":3,"file":"angular2-swapi.service.d.ts","sources":["angular2-swapi.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { People, Film, Starship, Vehicle, Species, Planet } from './angular2-swapi.models';\nexport declare class Angular2SwapiService {\n    private _http;\n    TAG: string;\n    swapiUrl: string;\n    constructor(_http: HttpClient);\n    /**\n     * Add page value url param\n     */\n    getByPage(page: number): string;\n    /**\n     * Return list of people as observable\n     */\n    getPeople(page?: number): Observable<People[]>;\n    /**\n     * Return people by id\n     */\n    getPeopleById(id: number): Observable<People>;\n    /**\n     * Search people by name\n     */\n    searchPeople(name: string): Observable<People[]>;\n    /**\n     * Return list of films as observable\n     */\n    getFilms(page?: number): Observable<Film[]>;\n    /**\n     * Return film by id\n     */\n    getFilm(id: number): Observable<Film>;\n    /**\n     * Search films by title\n     */\n    searchFilms(title: string): Observable<Film[]>;\n    /**\n     * Return list of starships\n     */\n    getStarships(page?: number): Observable<Starship[]>;\n    /**\n     * Return starship by id\n     */\n    getStarship(id: number): Observable<Starship>;\n    /**\n     * Search starships by name\n     */\n    searchStarships(name: string): Observable<Starship[]>;\n    /**\n     * Return list of vehicles as observable\n     */\n    getVehicles(page?: number): Observable<Vehicle[]>;\n    /**\n     * Return vehicle by id\n     */\n    getVehicle(id: number): Observable<Vehicle>;\n    /**\n     * Search vehicles by name\n     */\n    searchVehicles(name: string): Observable<Vehicle[]>;\n    /**\n     * Retrun list of species as observable\n     */\n    getSpecies(page?: number): Observable<Species[]>;\n    /**\n     * Return species by id\n     */\n    getSpeciesById(id: number): Observable<Species>;\n    /**\n     * Search species by name\n     */\n    searchSpecies(name: string): Observable<Species[]>;\n    /**\n     *  Return list od planets as observable\n     */\n    getPlanets(page?: number): Observable<Planet[]>;\n    /**\n     * Return planet by id\n     */\n    getPlanet(id: number): Observable<Planet>;\n    /**\n     * Search planets by name\n     */\n    searchPlanets(name: string): Observable<Planet[]>;\n    /**\n     * Handle HTTP Errors\n     */\n    private handleError(error);\n}\n"]}